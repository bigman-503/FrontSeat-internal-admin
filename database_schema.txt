# FrontSeat Ad Hub - Database Schema Design
# Comprehensive schema for advertising platform with metrics, KPIs, and advertiser needs

## Overview
This schema is designed to support a comprehensive advertising platform for ride-sharing vehicles, focusing on:
- Campaign management and optimization
- Real-time metrics and KPIs
- Advertiser analytics and insights
- Performance tracking and attribution
- Revenue optimization

## Core Tables

### 1. ADVERTISERS
```sql
CREATE TABLE advertisers (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    company_name VARCHAR(255) NOT NULL,
    contact_name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(20),
    website VARCHAR(255),
    industry VARCHAR(100),
    company_size ENUM('startup', 'small', 'medium', 'large', 'enterprise'),
    billing_address JSONB, -- {street, city, state, zip, country}
    tax_id VARCHAR(50),
    status ENUM('active', 'suspended', 'pending_approval', 'inactive') DEFAULT 'pending_approval',
    credit_limit DECIMAL(12,2) DEFAULT 0,
    current_balance DECIMAL(12,2) DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    created_by UUID REFERENCES users(id)
);
```

### 2. USERS (Advertiser Account Users)
```sql
CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    advertiser_id UUID REFERENCES advertisers(id) ON DELETE CASCADE,
    email VARCHAR(255) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    role ENUM('admin', 'manager', 'viewer', 'billing') DEFAULT 'viewer',
    permissions JSONB, -- Custom permissions per user
    last_login TIMESTAMP WITH TIME ZONE,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

### 3. CAMPAIGNS
```sql
CREATE TABLE campaigns (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    advertiser_id UUID REFERENCES advertisers(id) ON DELETE CASCADE,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    status ENUM('draft', 'pending_approval', 'active', 'paused', 'completed', 'cancelled') DEFAULT 'draft',
    campaign_type ENUM('display', 'video', 'interactive', 'audio') DEFAULT 'display',
    objective ENUM('brand_awareness', 'traffic', 'conversions', 'app_installs', 'lead_generation') NOT NULL,
    
    -- Budget and Bidding
    total_budget DECIMAL(12,2) NOT NULL,
    daily_budget DECIMAL(12,2),
    bid_strategy ENUM('cpm', 'cpc', 'cpa', 'cpl') DEFAULT 'cpm',
    bid_amount DECIMAL(8,2),
    
    -- Scheduling
    start_date TIMESTAMP WITH TIME ZONE NOT NULL,
    end_date TIMESTAMP WITH TIME ZONE NOT NULL,
    timezone VARCHAR(50) DEFAULT 'UTC',
    
    -- Targeting
    targeting_criteria JSONB, -- {demographics, locations, times, behaviors}
    
    -- Creative
    creative_assets JSONB, -- {images, videos, audio, interactive_elements}
    landing_page_url VARCHAR(500),
    
    -- Performance Tracking
    conversion_tracking JSONB, -- {pixel_id, events, goals}
    
    -- Metadata
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    created_by UUID REFERENCES users(id),
    approved_at TIMESTAMP WITH TIME ZONE,
    approved_by UUID REFERENCES users(id)
);
```

### 4. AD_GROUPS
```sql
CREATE TABLE ad_groups (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    campaign_id UUID REFERENCES campaigns(id) ON DELETE CASCADE,
    name VARCHAR(255) NOT NULL,
    status ENUM('active', 'paused', 'deleted') DEFAULT 'active',
    bid_modifier DECIMAL(4,2) DEFAULT 1.0, -- Multiplier for campaign bid
    targeting_override JSONB, -- Override campaign targeting
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

### 5. ADS
```sql
CREATE TABLE ads (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    ad_group_id UUID REFERENCES ad_groups(id) ON DELETE CASCADE,
    name VARCHAR(255) NOT NULL,
    status ENUM('active', 'paused', 'rejected', 'pending_approval') DEFAULT 'pending_approval',
    ad_format ENUM('banner', 'video', 'interactive', 'audio', 'native') NOT NULL,
    
    -- Creative Content
    headline VARCHAR(255),
    description TEXT,
    call_to_action VARCHAR(50),
    creative_urls JSONB, -- {image_urls, video_urls, audio_urls}
    dimensions JSONB, -- {width, height, aspect_ratio}
    
    -- Performance
    quality_score DECIMAL(3,2), -- 0.00 to 10.00
    approval_status ENUM('approved', 'rejected', 'pending') DEFAULT 'pending',
    rejection_reason TEXT,
    
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    approved_at TIMESTAMP WITH TIME ZONE,
    approved_by UUID REFERENCES users(id)
);
```

### 6. VEHICLES
```sql
CREATE TABLE vehicles (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    driver_id UUID, -- Reference to driver system
    license_plate VARCHAR(20) UNIQUE NOT NULL,
    make VARCHAR(50) NOT NULL,
    model VARCHAR(50) NOT NULL,
    year INTEGER NOT NULL,
    color VARCHAR(30),
    vehicle_type ENUM('sedan', 'suv', 'truck', 'van', 'luxury') NOT NULL,
    
    -- Display Capabilities
    display_types JSONB, -- {roof_display, side_display, rear_display, interior_display}
    display_specs JSONB, -- {resolution, brightness, connectivity}
    audio_capable BOOLEAN DEFAULT false,
    
    -- Location and Availability
    current_location POINT, -- PostGIS point for geolocation
    service_areas JSONB, -- Array of area IDs where vehicle operates
    operating_hours JSONB, -- {monday: {start, end}, tuesday: {...}}
    
    -- Status
    status ENUM('active', 'maintenance', 'offline', 'retired') DEFAULT 'active',
    last_seen TIMESTAMP WITH TIME ZONE,
    
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

### 7. AD_PLACEMENTS
```sql
CREATE TABLE ad_placements (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    ad_id UUID REFERENCES ads(id) ON DELETE CASCADE,
    vehicle_id UUID REFERENCES vehicles(id) ON DELETE CASCADE,
    placement_type ENUM('roof', 'side', 'rear', 'interior', 'audio') NOT NULL,
    position JSONB, -- {x, y, width, height} for display positioning
    priority INTEGER DEFAULT 1, -- Higher number = higher priority
    start_time TIMESTAMP WITH TIME ZONE NOT NULL,
    end_time TIMESTAMP WITH TIME ZONE NOT NULL,
    status ENUM('scheduled', 'active', 'completed', 'cancelled') DEFAULT 'scheduled',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

## Metrics and Analytics Tables

### 8. IMPRESSIONS
```sql
CREATE TABLE impressions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    ad_placement_id UUID REFERENCES ad_placements(id) ON DELETE CASCADE,
    vehicle_id UUID REFERENCES vehicles(id) ON DELETE CASCADE,
    ad_id UUID REFERENCES ads(id) ON DELETE CASCADE,
    campaign_id UUID REFERENCES campaigns(id) ON DELETE CASCADE,
    
    -- Impression Details
    impression_time TIMESTAMP WITH TIME ZONE NOT NULL,
    location POINT, -- Where impression occurred
    weather_conditions VARCHAR(50),
    traffic_conditions VARCHAR(50),
    
    -- Viewability
    viewable_duration INTEGER, -- Seconds ad was viewable
    viewability_percentage DECIMAL(5,2), -- 0.00 to 100.00
    
    -- Context
    vehicle_speed DECIMAL(5,2), -- MPH when impression occurred
    passenger_count INTEGER,
    route_segment VARCHAR(100),
    
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

### 9. CLICKS
```sql
CREATE TABLE clicks (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    impression_id UUID REFERENCES impressions(id) ON DELETE CASCADE,
    ad_placement_id UUID REFERENCES ad_placements(id) ON DELETE CASCADE,
    click_time TIMESTAMP WITH TIME ZONE NOT NULL,
    click_type ENUM('display_click', 'video_click', 'interactive_click', 'audio_click'),
    click_coordinates JSONB, -- {x, y} where user clicked
    device_info JSONB, -- {user_agent, screen_size, etc.}
    session_id VARCHAR(255),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

### 10. CONVERSIONS
```sql
CREATE TABLE conversions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    campaign_id UUID REFERENCES campaigns(id) ON DELETE CASCADE,
    ad_id UUID REFERENCES ads(id) ON DELETE CASCADE,
    click_id UUID REFERENCES clicks(id) ON DELETE SET NULL,
    impression_id UUID REFERENCES impressions(id) ON DELETE SET NULL,
    
    -- Conversion Details
    conversion_time TIMESTAMP WITH TIME ZONE NOT NULL,
    conversion_type ENUM('purchase', 'signup', 'download', 'lead', 'custom') NOT NULL,
    conversion_value DECIMAL(10,2), -- Monetary value of conversion
    currency VARCHAR(3) DEFAULT 'USD',
    
    -- Attribution
    attribution_model ENUM('last_click', 'first_click', 'linear', 'time_decay', 'position_based'),
    attribution_value DECIMAL(10,2), -- Value attributed to this ad
    
    -- Customer Data
    customer_id VARCHAR(255), -- External customer ID
    customer_data JSONB, -- Additional customer information
    
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

### 11. ENGAGEMENTS
```sql
CREATE TABLE engagements (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    impression_id UUID REFERENCES impressions(id) ON DELETE CASCADE,
    ad_id UUID REFERENCES ads(id) ON DELETE CASCADE,
    engagement_type ENUM('video_play', 'video_complete', 'interaction', 'audio_play', 'hover', 'focus'),
    engagement_time TIMESTAMP WITH TIME ZONE NOT NULL,
    duration INTEGER, -- Duration of engagement in seconds
    engagement_data JSONB, -- Additional engagement-specific data
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

## Geographic and Targeting Tables

### 12. LOCATIONS
```sql
CREATE TABLE locations (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(255) NOT NULL,
    type ENUM('city', 'neighborhood', 'business_district', 'university', 'airport', 'custom') NOT NULL,
    boundaries GEOMETRY(POLYGON), -- PostGIS polygon for area boundaries
    center_point POINT, -- Center of the area
    population INTEGER,
    demographics JSONB, -- {age_groups, income_levels, interests}
    traffic_patterns JSONB, -- {peak_hours, traffic_volume}
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

### 13. TARGETING_RULES
```sql
CREATE TABLE targeting_rules (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    campaign_id UUID REFERENCES campaigns(id) ON DELETE CASCADE,
    rule_type ENUM('location', 'time', 'demographic', 'behavioral', 'contextual') NOT NULL,
    rule_config JSONB NOT NULL, -- Configuration specific to rule type
    priority INTEGER DEFAULT 1,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

## Financial and Billing Tables

### 14. BILLING_ACCOUNTS
```sql
CREATE TABLE billing_accounts (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    advertiser_id UUID REFERENCES advertisers(id) ON DELETE CASCADE,
    account_name VARCHAR(255) NOT NULL,
    billing_type ENUM('prepaid', 'postpaid', 'credit') DEFAULT 'prepaid',
    payment_method JSONB, -- Encrypted payment information
    billing_address JSONB,
    tax_settings JSONB,
    auto_recharge BOOLEAN DEFAULT false,
    recharge_threshold DECIMAL(10,2),
    recharge_amount DECIMAL(10,2),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

### 15. TRANSACTIONS
```sql
CREATE TABLE transactions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    billing_account_id UUID REFERENCES billing_accounts(id) ON DELETE CASCADE,
    campaign_id UUID REFERENCES campaigns(id) ON DELETE SET NULL,
    transaction_type ENUM('charge', 'refund', 'adjustment', 'recharge') NOT NULL,
    amount DECIMAL(12,2) NOT NULL,
    currency VARCHAR(3) DEFAULT 'USD',
    description TEXT,
    status ENUM('pending', 'completed', 'failed', 'cancelled') DEFAULT 'pending',
    payment_reference VARCHAR(255),
    processed_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);
```

## Performance Optimization Tables

### 16. CAMPAIGN_PERFORMANCE_DAILY
```sql
CREATE TABLE campaign_performance_daily (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    campaign_id UUID REFERENCES campaigns(id) ON DELETE CASCADE,
    date DATE NOT NULL,
    
    -- Impressions and Reach
    impressions BIGINT DEFAULT 0,
    unique_impressions BIGINT DEFAULT 0,
    reach BIGINT DEFAULT 0,
    
    -- Engagement
    clicks BIGINT DEFAULT 0,
    engagements BIGINT DEFAULT 0,
    video_views BIGINT DEFAULT 0,
    video_completions BIGINT DEFAULT 0,
    
    -- Conversions
    conversions BIGINT DEFAULT 0,
    conversion_value DECIMAL(12,2) DEFAULT 0,
    
    -- Financial
    spend DECIMAL(12,2) DEFAULT 0,
    revenue DECIMAL(12,2) DEFAULT 0,
    
    -- Calculated Metrics
    ctr DECIMAL(5,4) DEFAULT 0, -- Click-through rate
    cpm DECIMAL(8,2) DEFAULT 0, -- Cost per mille
    cpc DECIMAL(8,2) DEFAULT 0, -- Cost per click
    cpa DECIMAL(8,2) DEFAULT 0, -- Cost per acquisition
    roas DECIMAL(8,2) DEFAULT 0, -- Return on ad spend
    
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    UNIQUE(campaign_id, date)
);
```

### 17. AD_PERFORMANCE_HOURLY
```sql
CREATE TABLE ad_performance_hourly (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    ad_id UUID REFERENCES ads(id) ON DELETE CASCADE,
    campaign_id UUID REFERENCES campaigns(id) ON DELETE CASCADE,
    date_hour TIMESTAMP WITH TIME ZONE NOT NULL,
    
    -- Metrics
    impressions BIGINT DEFAULT 0,
    clicks BIGINT DEFAULT 0,
    engagements BIGINT DEFAULT 0,
    conversions BIGINT DEFAULT 0,
    spend DECIMAL(10,2) DEFAULT 0,
    
    -- Performance Scores
    quality_score DECIMAL(3,2),
    relevance_score DECIMAL(3,2),
    
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    UNIQUE(ad_id, date_hour)
);
```

## Indexes for Performance

```sql
-- Campaign performance indexes
CREATE INDEX idx_campaigns_advertiser_status ON campaigns(advertiser_id, status);
CREATE INDEX idx_campaigns_dates ON campaigns(start_date, end_date);
CREATE INDEX idx_campaigns_created ON campaigns(created_at);

-- Impression tracking indexes
CREATE INDEX idx_impressions_campaign_time ON impressions(campaign_id, impression_time);
CREATE INDEX idx_impressions_vehicle_time ON impressions(vehicle_id, impression_time);
CREATE INDEX idx_impressions_location ON impressions USING GIST(location);

-- Click tracking indexes
CREATE INDEX idx_clicks_impression ON clicks(impression_id);
CREATE INDEX idx_clicks_time ON clicks(click_time);

-- Conversion tracking indexes
CREATE INDEX idx_conversions_campaign ON conversions(campaign_id, conversion_time);
CREATE INDEX idx_conversions_ad ON conversions(ad_id, conversion_time);

-- Performance aggregation indexes
CREATE INDEX idx_campaign_performance_daily_campaign_date ON campaign_performance_daily(campaign_id, date);
CREATE INDEX idx_ad_performance_hourly_ad_date ON ad_performance_hourly(ad_id, date_hour);

-- Geographic indexes
CREATE INDEX idx_locations_boundaries ON locations USING GIST(boundaries);
CREATE INDEX idx_vehicles_location ON vehicles USING GIST(current_location);
```

## Key Performance Indicators (KPIs) for Advertisers

### Primary KPIs
1. **Return on Ad Spend (ROAS)**: Revenue / Ad Spend
2. **Cost Per Acquisition (CPA)**: Total Spend / Conversions
3. **Click-Through Rate (CTR)**: Clicks / Impressions
4. **Conversion Rate**: Conversions / Clicks
5. **Cost Per Mille (CPM)**: (Spend / Impressions) * 1000
6. **Viewability Rate**: Viewable Impressions / Total Impressions
7. **Engagement Rate**: Engagements / Impressions
8. **Video Completion Rate**: Video Completions / Video Starts

### Secondary KPIs
1. **Reach**: Unique people reached
2. **Frequency**: Average impressions per person
3. **Brand Awareness Lift**: Pre/post campaign awareness
4. **Attribution Value**: Value attributed to specific touchpoints
5. **Quality Score**: Ad relevance and performance score
6. **Share of Voice**: Impressions vs. competitors
7. **Geographic Performance**: Performance by location
8. **Time-based Performance**: Performance by hour/day

## Technical Implementation Considerations

### 1. Real-time Data Processing
- Use Apache Kafka or similar for real-time event streaming
- Implement Redis for caching frequently accessed metrics
- Use ClickHouse or TimescaleDB for time-series analytics

### 2. Data Warehouse
- Implement ETL processes for data aggregation
- Use materialized views for complex KPI calculations
- Implement data partitioning by date for performance

### 3. API Design
- RESTful APIs for campaign management
- GraphQL for complex analytics queries
- WebSocket connections for real-time updates

### 4. Security
- Encrypt sensitive advertiser data
- Implement role-based access control
- Use JWT tokens for API authentication
- Audit logging for all financial transactions

### 5. Scalability
- Horizontal scaling with read replicas
- Database sharding by advertiser or geography
- CDN for creative asset delivery
- Microservices architecture for different functions

### 6. Analytics and Reporting
- Pre-calculated metrics for dashboard performance
- Real-time dashboards using WebSockets
- Scheduled reports via email/SMS
- Custom report builder for advertisers

This schema provides a comprehensive foundation for a sophisticated advertising platform that can handle complex targeting, real-time bidding, detailed analytics, and scalable performance tracking.
